{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/kmahlangu/Projects/no-more-sparks/src/components/auth/AuthForm.tsx"],"sourcesContent":["'use client';\n\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { useState } from 'react';\n\ntype AuthFormProps = {\n  type: 'login' | 'register';\n};\n\nexport default function AuthForm({ type }: AuthFormProps) {\n  // Form validation schema\n  const formSchema = z.object({\n    email: z.string().email('Invalid email address'),\n    password: z.string().min(6, 'Password must be at least 6 characters'),\n    ...(type === 'register' && {\n      name: z.string().min(2, 'Name is required'),\n    }),\n  });\n\n  const [error, setError] = useState<string | null>(null);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitting },\n  } = useForm({\n    resolver: zodResolver(formSchema),\n  });\n\n  const onSubmit = async (data: any) => {\n    try {\n      setError(null);\n      // Replace with actual API call\n      const response = await fetch(`/api/auth/${type}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      });\n      \n      if (!response.ok) {\n        throw new Error(await response.text());\n      }\n      \n      // Redirect on success\n      window.location.href = '/dashboard';\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An error occurred');\n    }\n  };\n\n  return (\n    <form className=\"space-y-6\" onSubmit={handleSubmit(onSubmit)}>\n      {error && (\n        <div className=\"bg-red-50 text-red-500 p-3 rounded-md text-sm\">\n          {error}\n        </div>\n      )}\n\n      {type === 'register' && (\n        <div>\n          <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n            Full Name\n          </label>\n          <input\n            id=\"name\"\n            {...register('name')}\n            type=\"text\"\n            className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-red-500 focus:ring-red-500 sm:text-sm ${\n              errors.name ? 'border-red-500' : 'border'\n            }`}\n          />\n          {errors.name && (\n            <p className=\"mt-1 text-sm text-red-500\">{errors.name.message}</p>\n          )}\n        </div>\n      )}\n\n      <div>\n        <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n          Email address\n        </label>\n        <input\n          id=\"email\"\n          {...register('email')}\n          type=\"email\"\n          autoComplete=\"email\"\n          className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-red-500 focus:ring-red-500 sm:text-sm ${\n            errors.email ? 'border-red-500' : 'border'\n          }`}\n        />\n        {errors.email && (\n          <p className=\"mt-1 text-sm text-red-500\">{errors.email.message}</p>\n        )}\n      </div>\n\n      <div>\n        <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n          Password\n        </label>\n        <input\n          id=\"password\"\n          {...register('password')}\n          type=\"password\"\n          autoComplete={type === 'login' ? 'current-password' : 'new-password'}\n          className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-red-500 focus:ring-red-500 sm:text-sm ${\n            errors.password ? 'border-red-500' : 'border'\n          }`}\n        />\n        {errors.password && (\n          <p className=\"mt-1 text-sm text-red-500\">{errors.password.message}</p>\n        )}\n      </div>\n\n      {type === 'login' && (\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center\">\n            <input\n              id=\"remember-me\"\n              name=\"remember-me\"\n              type=\"checkbox\"\n              className=\"h-4 w-4 rounded border-gray-300 text-red-500 focus:ring-red-500\"\n            />\n            <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-900\">\n              Remember me\n            </label>\n          </div>\n\n          <div className=\"text-sm\">\n            <a href=\"/auth/forgot-password\" className=\"font-medium text-red-500 hover:text-red-600\">\n              Forgot password?\n            </a>\n          </div>\n        </div>\n      )}\n\n      <div>\n        <button\n          type=\"submit\"\n          disabled={isSubmitting}\n          className={`w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-red-500 hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 ${\n            isSubmitting ? 'opacity-70 cursor-not-allowed' : ''\n          }`}\n        >\n          {isSubmitting ? (\n            'Processing...'\n          ) : type === 'login' ? (\n            'Sign in'\n          ) : (\n            'Create account'\n          )}\n        </button>\n      </div>\n    </form>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}